from reportlab.lib.pagesizes import letter
from reportlab.platypus import SimpleDocTemplate, Image, Paragraph, Spacer
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
from flask import send_file, jsonify
import requests
import os
import io

# Função para buscar dados do dashboard
def fetch_dashboard_data():
    response = requests.get('/api/dashboard_data')
    if response.status_code == 200:
        return response.json()
    return None

# Função para gerar o PDF
def generate_pdf_with_dashboard():
    # Configurações básicas do PDF
    buffer = io.BytesIO()
    doc = SimpleDocTemplate(buffer, pagesize=letter)
    styles = getSampleStyleSheet()
    elements = []

    # Título do Relatório
    elements.append(Paragraph("Relatório do Dashboard de Artigos Científicos", styles['Title']))

    # Fetch das métricas do dashboard
    dashboard_data = fetch_dashboard_data()
    if dashboard_data:
        # Inserindo as métricas
        metrics = dashboard_data['metrics']
        elements.append(Spacer(1, 0.25 * inch))
        elements.append(Paragraph(f"Total de Artigos: {metrics['total_artigos']}", styles['Normal']))
        elements.append(Paragraph(f"Média de Fator de Impacto: {metrics['media_fator_impacto']:.2f}", styles['Normal']))
        elements.append(Paragraph(f"Artigos do Ano Atual: {metrics['artigos_ano_atual']}", styles['Normal']))

    elements.append(Spacer(1, 0.5 * inch))

    # Caminho para as imagens dos gráficos
    chart_dir = os.path.join('static', 'img')

    # Lista de gráficos a ser incluída no relatório
    charts = ['chart1.png', 'chart2.png', 'chart3.png', 'chart4.png', 'chart5.png', 'chart6.png', 'chart7.png', 'chart8.png']

    # Adicionando gráficos ao PDF
    for chart in charts:
        chart_path = os.path.join(chart_dir, chart)
        if os.path.exists(chart_path):
            elements.append(Spacer(1, 0.25 * inch))
            elements.append(Paragraph(f"Gráfico {chart[:-4].capitalize()}", styles['Heading2']))
            elements.append(Image(chart_path, width=5*inch, height=3*inch))
        else:
            elements.append(Paragraph(f"Gráfico {chart[:-4]} não encontrado.", styles['Normal']))

    # Geração do PDF
    doc.build(elements)

    # Retornar o PDF como resposta
    buffer.seek(0)
    return buffer

# Rota Flask para gerar e baixar o PDF
@app.route('/download_pdf', methods=['GET'])
@login_required
def download_pdf():
    pdf_buffer = generate_pdf_with_dashboard()
    return send_file(pdf_buffer, as_attachment=True, download_name='relatorio_dashboard.pdf', mimetype='application/pdf')
